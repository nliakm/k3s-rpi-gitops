---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: firefly-iii
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: firefly-iii-stack
      version: firefly-iii-stack-0.7.0
      sourceRef:
        kind: HelmRepository
        name: firefly-iii-charts
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: nfs-subdir-external-provisioner
      namespace: nfs-system
  values:
    firefly-db:
      enabled: true
      image:
        repository: postgres
        tag: 10-alpine
        pullPolicy: IfNotPresent
      storage:
        class: nfs-subdir-external-provisioner
        accessModes: ReadWriteOnce
        dataSize: 1Gi
        # -- Use an existing PersistentVolumeClaim, overrides values above
        existingClaim: ""
      configs:
        RESTORE_URL: ""
        BACKUP_URL: ""
        DBHOST: firefly-firefly-db
        DBPORT: "5432"
        DBNAME: firefly
        DBUSER: firefly
        TZ: Europe/Berlin
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_USER: firefly
          # -- Set this to the name of a secret to load environment variables from. If defined, values in the secret will override values in configs
        existingSecret: "firefly-iii-secrets"

      backupSchedule: "0 3 * * *"

    firefly-iii:
      # -- Set to false to not deploy Firefly III
      enabled: true
      replicaCount: 1
      image:
        repository: "fireflyiii/core"
        pullPolicy: IfNotPresent
        tag: version-5.6.14
      persistence:
        # -- If you set this to false, uploaded attachments are not stored persistently and will be lost with every restart of the pod
        enabled: true
        storageClassName: nfs-subdir-external-provisioner
        accessModes: ReadWriteOnce
        storage: 1Gi
        # -- If you want to use an existing claim, set it here
        existingClaim: ""

      # -- Environment variables for Firefly III. See docs at: https://github.com/firefly-iii/firefly-iii/blob/main/.env.example
      config:
        # -- Set this to the name of a secret to load environment variables from. If defined, values in the secret will override values in config.env
        existingSecret: "firefly-secrets"

        # -- Set environment variables from configMaps or Secrets
        envValueFrom: {}

        # -- Directly defined environment variables. Use this for non-secret configuration values.
        env:
          DB_CONNECTION: pgsql
          DB_PORT: "5432"
          DB_DATABASE: firefly
          DB_USERNAME: firefly
          DEFAULT_LANGUAGE: "en_US"
          DEFAULT_LOCALE: "equal"
          TZ: "Europe/Berlin"
          TRUSTED_PROXIES: "**"

      # -- A cronjob for [recurring Firefly III tasks](https://docs.firefly-iii.org/firefly-iii/advanced-installation/cron/).
      cronjob:
        # -- Set to true to enable the CronJob. Note that you need to specify either cronjob.auth.existingSecret or cronjob.auth.token for it to actually be deployed.
        enabled: false
        # -- Authorization for the CronJob. See https://docs.firefly-iii.org/firefly-iii/advanced-installation/cron/#request-a-page-over-the-web
        auth:
          # -- The name of a secret containing a data.token field with the cronjob token
          existingSecret: ""
          # -- The name of the key in the existing secret to get the cronjob token from
          secretKey: "token"
          # -- The token in plain text
          token: ""
        # -- Annotations for the CronJob
        annotations: {}
        # -- When to run the CronJob. Defaults to 03:00 as this is when Firefly III executes regular tasks.
        schedule: "0 3 * * *"
        # -- How many pods to keep around for successful jobs
        successfulJobsHistoryLimit: 3
        # -- How many pods to keep around for failed jobs
        failedJobsHistoryLimit: 1
        # -- How to treat failed jobs
        restartPolicy: OnFailure
        image:
          repository: curlimages/curl
          pullPolicy: IfNotPresent
          tag: 7.81.0
      podAnnotations: {}

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      service:
        type: ClusterIP
        port: 80

      ingress:
        enabled: true
        className: "traefik"
        annotations:
            hajimari.io/enable: "true"
            hajimari.io/icon: "hand-coin-outline"
            traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - "firefly.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "*.${SECRET_DOMAIN}"
            secretName: "tls-wildcard-secret"

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

      autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80
    importer:
      # -- Set to false to not deploy the importer
      enabled: false
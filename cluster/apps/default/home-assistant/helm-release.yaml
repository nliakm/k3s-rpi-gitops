
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: home-assistant
      version: 13.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: homeassistant/home-assistant
      tag: 2022.6.7
    env:
      TZ: "Europe/Berlin"
    service:
      main:
        ports:
          http:
            port: 8123

    # -- Enable devices to be discoverable
    hostNetwork: true
    # -- When hostNetwork is true set dnsPolicy to ClusterFirstWithHostNet
    dnsPolicy: ClusterFirstWithHostNet

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "home-assistant"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "hass.${SECRET_DOMAIN}"
            secretName: "hass-tls-secret"
    persistence:
      config:
        enabled: true
        storageClass: nfs-client
        accessMode: ReadWriteOnce
        size: "10Gi"
      usb:
        enabled: false
        type: hostPath
        hostPath: /path/to/device
    postgresql:
      enabled: true
      debug: true
      image:
        repository: postgres
        tag: '14.1'
      postgresqlUsername: home-assistant
      postgresqlDatabase: home-assistant
      postgresqlPassword: ${HASS_POSTGRESQL_PASSWORD}
      postgresqlDataDir: "/data/pgdata"
      persistence:
        enabled: true
        storageClass: "nfs-client"
        size: 8Gi
        mountPath: "/data/"
      shmVolume:
        enabled: false
      volumePermissions:
        enabled: true
      podSecurityContext:
        enabled: true
        fsGroup: 999
      containerSecurityContext:
        enabled: true
        runAsUser: 999        
    metrics:
      enabled: true
      serviceMonitor:
        interval: 1m
        scrapeTimeout: 30s
        labels: {}
        bearerTokenSecret:
          name: "default-secrets"
          key: "HASS_LLAT"
      prometheusRule:
        enabled: true
        labels: {}
        rules:
          - alert: HomeAssistantAbsent
            annotations:
              description: Home Assistant has disappeared from Prometheus service discovery.
              summary: Home Assistant is down.
            expr: |
              absent(up{job=~".*home-assistant.*"} == 1)
            for: 5m
            labels:
              severity: critical
          - alert: SensorBatteryLevel
            annotations:
              summary: Battery low for entity {{ $labels.friendly_name }}
              description: "An entity is low on battery\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
            expr: |
              homeassistant_sensor_battery_percent < 3
          - alert: NASSecurityStatus
            expr: homeassistant_binary_sensor_state{job="home-assistant",entity="binary_sensor.synologynas_security_status"} != 0
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: NAS has atleast one security warning
              description: "There are security warnings on the NAS to check.\nThese can be outdated packages or unsecure settings."
          - alert: NASUpdateInformation
            expr: homeassistant_binary_sensor_state{job="home-assistant",entity="binary_sensor.synologynas_update_available"} != 0
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: NAS update available
              description: "The NAS has a new update available."
          - alert: NASMaxBadSectors
            expr: homeassistant_binary_sensor_state{domain="binary_sensor",entity=~".*exceeded_max_bad_sectors"} != 0
            for: 0m
            labels:
              severity: critical
            annotations:
              summary: Hard disk exceeded max bad sectors
              description: |-
                {{ $labels.friendly_name }}. 
                Actions to take: https://kb.synology.com/en-global/DSM/tutorial/How_to_diagnose_drives_health_status_when_receiving_bad_sector_warning
          - alert: TargetTempTooHigh
            expr: homeassistant_climate_target_temperature_celsius > 22
            for: 2h
            labels:
              severity: critical
            annotations:
              summary: Target temperature too high
              description: "The target temperature for thermostat {{ $labels.friendly_name }} is too high for too long."
                

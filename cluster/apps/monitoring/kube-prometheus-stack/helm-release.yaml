---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 21.0.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: nfs-subdir-external-provisioner
      namespace: nfs-system      
  values:
    fullnameOverride: prometheus
    additionalPrometheusRulesMap:
      rule-name:
        groups:
          - name: home-assistant
            rules:
              - alert: BatteryLow
                expr: battery_level_percent < 3
                for: 5m
                labels:
                  severity: critical
                annotations:
                  summary: Battery low for entity {{ $labels.friendly_name }}
                  description: "An entity is low on battery\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
              - alert: RsyncFailed
                expr: rsync_exit_code != 0
                for: 5m
                labels:
                  severity: critical
                annotations:
                  summary: Last rsync job failed
                  description: |-
                    "Rsync job (interval: {{ $labels.interval }}, directory: {{ $labels.directory }}) failed for instance {{ $labels.instance }} with exit code {{ $value }}."
              - alert: PrometheusTargetMissing
                expr: up == 0
                for: 0m
                labels:
                  severity: critical
                annotations:
                  summary: Prometheus target missing (instance {{ $labels.instance }})
                  description: "A Prometheus target has disappeared. An exporter might be crashed.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
          - name: ruleset_2
            rules:
              - alert: PrometheusAllTargetsMissing
                expr: count by (job) (up) == 0
                for: 0m
                labels:
                  severity: critical
                annotations:
                  summary: Prometheus all targets missing (instance {{ $labels.instance }})
                  description: "A Prometheus job does not have living target anymore.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    alertmanager:
      enabled: true
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "discord_webhook"
            webhook_configs:
              - url: "http://alertmanager-discord:9094"
                send_resolved: true
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 110h
          receiver: "discord_webhook"
          routes:
            - receiver: "null"
              match:
                alertname: Watchdog
            - receiver: 'discord_webhook'
              match_re:
                severity: critical|warning|error
              continue: true
        inhibit_rules:
          - source_match:
              severity: "critical"
            target_match:
              severity: "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          cert-manager.io/cluster-issuer: "selfsigned-cluster-issuer"
          cert-manager.io/private-key-secret-name: "root-secret"
          hajimari.io/enable: "true"
          hajimari.io/appName: "Alertmanager"
          hajimari.io/group: "monitoring"
          hajimari.io/icon: "email-alert"
        hosts:
          - "alert-manager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "alert-manager.${SECRET_DOMAIN}"
            secretName: "alert-manager-tls-secret"
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "nfs-client"
              resources:
                requests:
                  storage: 1Gi
    kubeScheduler:
      enabled: false
    kubeControllerManager:
      enabled: false
    nodeExporter:
      serviceMonitor:
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    prometheus-node-exporter:
      fullnameOverride: node-exporter
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    # Setting this option to 0 disabled CPU limits
    prometheusOperator:
      configReloaderCpu: 0
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          cert-manager.io/cluster-issuer: "selfsigned-cluster-issuer"
          cert-manager.io/private-key-secret-name: "root-secret"
          hajimari.io/enable: "true"
          hajimari.io/appName: "Prometheus"
          hajimari.io/group: "monitoring"
          hajimari.io/icon: "torch"
        hosts:
          - "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "prometheus.${SECRET_DOMAIN}"
            secretName: "prometheus-tls-secret"
      thanosService:
        enabled: false
      thanosServiceMonitor:
        enabled: false
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "nfs-client"
              resources:
                requests:
                  storage: 10Gi
        additionalScrapeConfigs:
          - job_name: "home-assistant"
            scheme: http
            metrics_path: /api/prometheus
            tls_config:
              insecure_skip_verify: true
            authorization:
              type: Bearer
              credentials: "${HOME_ASSISTANT_BEARER}"
            static_configs:
              - targets:
                - "${HOME_ASSISTANT_SERVER}:8123"
          - job_name: "node-exporter"
            honor_timestamps: true
            static_configs:
              - targets:
                  - "${PIHOLE_SERVER}:9100"
                  - "${HOME_ASSISTANT_SERVER}:9100"
    resources:
      requests:
        cpu: 75m
        memory: 128Mi
      limits:
        memory: 1Gi
        cpu: 800m
